openapi: 3.0.0
info:
  title: Task API
  version: 1.0.0
  description: API documentation.

servers:
  - url: http://localhost:5000/dev  # change this url if you deploy in AWS
    description: Local development server

paths:
  /tasks:
    get:
      summary: Get all tasks
      description: Retrieve a list of tasks from the database.
      responses:
        '200':
          description: A list of tasks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "60d5ec49e1d2f4567890abcd"
                    title:
                      type: string
                      example: "Finish Swagger Integration"
                    description:
                      type: string
                      example: "Add Swagger docs to the backend"
                    status:
                      type: string
                      enum: [To Do, In Progress, Completed]
    post:
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "New Task"
                description:
                  type: string
                  example: "Task details here"
                status:
                  type: string
                  enum: [To Do, In Progress, Completed]
      responses:
        '201':
          description: Task created successfully.

  /tasks/{id}:
    get:
      summary: Get a task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The MongoDB ObjectId of the task
      responses:
        '200':
          description: Task retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
                  status:
                    type: string
        '404':
          description: Task not found.

    put:
      summary: Update a task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The MongoDB ObjectId of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "Updated Task Title"
                description:
                  type: string
                  example: "Updated task details"
                status:
                  type: string
                  enum: [To Do, In Progress, Completed]
      responses:
        '200':
          description: Task updated successfully.
        '404':
          description: Task not found.

    delete:
      summary: Delete a task by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The MongoDB ObjectId of the task
      responses:
        '200':
          description: Task deleted successfully.
        '404':
          description: Task not found.